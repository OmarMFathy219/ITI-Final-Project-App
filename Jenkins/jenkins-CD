pipeline {
  agent {
    kubernetes {
      yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: cloud-sdk
spec:
  containers:
  - name: cloud-sdk
    image:  google/cloud-sdk
    command:
    - cat
    tty: true
    securityContext:
      privileged: true
    volumeMounts:
      - name: varlibcontainers
        mountPath: /var/lib/containers
  volumes:
    - name: varlibcontainers
'''   
    }
  }
  environment {
    CLOUDSDK_CORE_PROJECT='iti-devops-366712'
    CLIENT_EMAIL='project-service-account@iti-devops-366712.iam.gserviceaccount.com'
  }
  stages {
    stage('Deployment') {
      steps {
        container('cloud-sdk') {
        withCredentials([file(credentialsId: 'Service-Account-Cred', variable: 'GCLOUD_CREDS')]) {
          sh '''
            gcloud auth activate-service-account --key-file="$GCLOUD_CREDS"
            apt-get install google-cloud-sdk-app-engine-java kubectl -y
            gcloud container clusters get-credentials private-cluster --zone us-central1-a --project iti-devops-366712
            kubectl apply -f ./Kubernetes/python-deployment.yaml -n production
            kubectl apply -f ./Kubernetes/redis-deployment.yaml -n production
            kubectl apply -f ./Kubernetes/redis-service.yaml -n production
            kubectl apply -f ./Kubernetes/loadbalancer.yaml -n production
          '''
        }
      }
      }
    }
  }
}
